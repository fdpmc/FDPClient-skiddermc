package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import net.ccbluex.liquidbounce.LiquidBounce
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.value.BoolValue
import net.minecraft.network.play.client.C03PacketPlayer
import java.util.*
import kotlin.math.roundToInt

class GroundConvertDisabler : DisablerMode("GroundConvert") {
    private val validGroundValue = BoolValue("${valuePrefix}YPos", true)
    private val yPortValue = BoolValue("${valuePrefix}YOffset", true)
    private val noGroundValue = BoolValue("${valuePrefix}NoGround", true)
    private val onlyNegativeValue = BoolValue("${valuePrefix}OnlyDownMotion", true)

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C03PacketPlayer) {
            val yPos = (mc.thePlayer.posY / 0.015625).roundToInt() * 0.015625
            if (validGroundValue.get()) {
                if (!onlyNegativeValue.get() || mc.thePlayer.motionY < 0) {
                    mc.thePlayer.setPosition(mc.thePlayer.posX, yPos, mc.thePlayer.posZ)
                    packet.y = yPos
                }
            }
            if (yPortValue.get() && (mc.thePlayer.onGround || packet.onGround)) {
                packet.y += 0.015625
            }
            if (noGroundValue.get()) {
                packet.onGround = false
            }
        }
    }
}
